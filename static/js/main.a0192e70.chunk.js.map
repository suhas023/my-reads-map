{"version":3,"sources":["main-components/my-reads/components/booklist/BooksList.js","main-components/my-reads/components/compartment/Compartment.js","main-components/my-reads/components/bookshelf/BookShelf.js","main-components/my-reads/api/BooksAPI.js","main-components/my-reads/components/searchpage/SearchPage.js","main-components/my-reads/MyReads.js","main-components/neighbourhood-libraries/components/aside/Aside.js","main-components/neighbourhood-libraries/components/marker/Marker.js","main-components/neighbourhood-libraries/components/map/Map.js","main-components/neighbourhood-libraries/components/error/Error.js","main-components/neighbourhood-libraries/NeighbourhoodLibraries.js","App.js","serviceWorker.js","index.js"],"names":["Book","props","react_default","a","createElement","className","style","backgroundImage","concat","book","imageLinks","thumbnail","backgroundPosition","backgroundSize","backgroundRepeat","onChange","e","changeShelf","target","value","defaultValue","shelf","disabled","title","authors","BooksList","books","map","key","id","Compartment","name","booklist_BooksList","BookShelf","shelfs","filter","length","compartment_Compartment","Link","to","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","fetch","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","SearchPage","state","shelfBooks","newBooks","onQueryChange","_this","setState","bookAPI","escapeRegExp","trim","error","booksID","includes","push","newShelf","inShelf","removeFromOldShelf","b","toConsumableArray","this","placeholder","Component","MyReads","currentlyReading","wantToRead","read","validShelfs","defineProperty","addToNewShelf","bookAPi","getBookIDs","bookIDs","forEach","_this2","_this3","Route","exact","path","render","bookshelf_BookShelf","assign","components_searchpage_SearchPage","Aside","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","updateQuery","trimLeft","toLowerCase","onFilterLibraries","toggleShowList","prevState","showList","handleItemClick","libraries","window","innerWidth","onSelectLibrary","asideHeight","containerState","aria-label","role","autoFocus","aria-activedescendant","tabIndex","library","index","selectedID","onClick","onKeyPress","Icon_default","Marker","displayInfo","info","photos","getUrl","rating","opening_hours","open_now","formatted_address","slice","marker","setAnimation","google","maps","Animation","BOUNCE","setTimeout","onShowInfoWindow","uluru","lat","parseFloat","geometry","location","lng","position","addListener","nextProps","setMap","Map","showInfoWindow","infoWindow","setContent","setAnchor","setExactLocation","coords","latitude","longitude","LatLng","setCenter","service","textSearch","radius","r","onLoadLibraries","setDefaultLocation","mapLoaded","loaction","onDisplayGoogleMaps","mapState","zoom","center","styles","mapStyle","mapDOM","document","getElementById","InfoWindow","maxWidth","places","PlacesService","event","navigator","geolocation","getCurrentPosition","components_marker_Marker","Error","console","log","errorMessage","message","reload","NeighbourhoodLibraries","gm_authFailure","err","getGoogleMaps","googleMapsPromise","Promise","resolve","resolveGoogleMapsPromise","script","src","async","appendChild","selectLibrary","selectedLibraryID","filterLibraries","filteredLibraries","loadLibraries","error_Error","join","components_aside_Aside","components_map_Map","App","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","BrowserRouter","basename","process","src_App","URL","origin","addEventListener","response","status","get","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a0192e70.chunk.js","sourcesContent":["import React from 'react';\r\nimport './BooksList.css';\r\n\r\nfunction BooksList(props) {\r\n  return (\r\n    <ul className=\"books-list\">\r\n      {\r\n        props.books.map(book => \r\n          <li key={book.id}>\r\n            <Book \r\n              book={book} \r\n              changeShelf={props.changeShelf}\r\n            />\r\n          </li>\r\n        )\r\n      }\r\n    </ul>\r\n  );\r\n}\r\n\r\nfunction Book(props) {\r\n  return (\r\n    <div className=\"book\">\r\n      <div className=\"book-top\">\r\n        <div \r\n          className=\"book-cover\"\r\n          style={{\r\n            backgroundImage: `url(${props.book.imageLinks && \r\n              props.book.imageLinks.thumbnail})`,\r\n            backgroundPosition: 'center',\r\n            backgroundSize: 'cover',\r\n            backgroundRepeat: 'noRepeat',\r\n          }}\r\n        >\r\n        </div>\r\n        <div className=\"book-shelf-changer\">\r\n          <select \r\n            onChange={(e) => props.changeShelf(props.book, e.target.value)}\r\n            defaultValue={props.book.shelf || 'none'}\r\n          >\r\n            <option value=\"move\" disabled>Move to...</option>\r\n            <option value=\"currentlyReading\">Currently Reading</option>\r\n            <option value=\"wantToRead\">Want to Read</option>\r\n            <option value=\"read\">Read</option>\r\n            <option value=\"none\">None</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div className=\"book-title\">{props.book.title}</div>\r\n      <div className=\"book-authors\">{props.book.authors}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BooksList;","import React from 'react';\r\nimport BooksList from '../booklist/BooksList';\r\nimport './Compartment.css';\r\n\r\nfunction Compartment(props) {\r\n  let name;\r\n  switch(props.name) {\r\n    case 'currentlyReading': name = 'Currently Reading'; break;\r\n    case 'wantToRead': name = 'Want To Read'; break;\r\n    case 'read': name = 'Read'; break;\r\n    default: name = props.name;\r\n  }\r\n  return (\r\n    <div className=\"compartment\">\r\n      <h2>{name}</h2>\r\n      <BooksList books={props.books} changeShelf={props.changeShelf} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Compartment;","import React from 'react';\r\nimport Compartment from '../compartment/Compartment';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './BookShelf.css';\r\n\r\nfunction BookShelf(props) {\r\n  let shelfs = props.shelfs;\r\n  return (\r\n    <div className=\"book-shelf\">\r\n      <header>\r\n        <h1>My Reads</h1>\r\n      </header>\r\n      <div className=\"compartments\">\r\n        {\r\n          shelfs.filter((shelf) => props[shelf].length > 0)\r\n            .map((shelf) => (\r\n              <Compartment\r\n                key={shelf}\r\n                name={shelf}\r\n                books={props[shelf]}\r\n                changeShelf={props.changeShelf}\r\n              />)\r\n            )\r\n        }\r\n      </div>\r\n      <div className=\"open-search\">\r\n        <Link to=\"/map\" className=\"map-btn\">MAP</Link>\r\n        <Link to='/search' className=\"add-btn\">Add a book</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BookShelf;","\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>  \r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React, { Component } from 'react';\r\nimport Compartment from '../compartment/Compartment';\r\nimport { Link } from 'react-router-dom';\r\nimport escapeRegExp from 'escape-string-regexp';\r\nimport * as bookAPI from '../../api/BooksAPI';\r\nimport './SearchPage.css';\r\n\r\nclass SearchPage extends Component {\r\n  state = {\r\n    query: '',\r\n    shelfBooks: [],\r\n    newBooks: []\r\n  }\r\n\r\n  onQueryChange = (e) => {\r\n    let search = e.target.value;\r\n    let newBooks = [];\r\n    let shelfBooks = [];\r\n    this.setState({query: search});\r\n\r\n    /* Search for books.\r\n       All books found in shelf are stored in 'shelfBooks'.\r\n       Books not found are stored in 'newBooks'.\r\n       If book is in a shelf, give it a shelf property in which it's stored.\r\n    */\r\n    bookAPI.search(escapeRegExp(search.trim()))\r\n    .then(books => {\r\n      if(!books || books.error) {\r\n        this.setState({newBooks: [], shelfBooks: []});\r\n        return;\r\n      }\r\n      /*\r\n        filter returns true if books not found in shelf.\r\n        And these books are stored in 'newBooks'.\r\n      */\r\n      newBooks = books.filter(book => {\r\n        for(let shelf in this.props.booksID) {\r\n          if(this.props.booksID[shelf].includes(book.id)) {\r\n            book['shelf'] = shelf;\r\n            book['inShelf'] = true;\r\n            shelfBooks.push(book);\r\n            return false;\r\n          }\r\n        }\r\n        book['inShelf'] = false;\r\n        return true;\r\n      });\r\n\r\n      this.setState({shelfBooks, newBooks});\r\n    });\r\n  }\r\n\r\n  //Move the book between the search cmpartments, when the book is added or removed from shelf\r\n  changeShelf = (book, newShelf) => {\r\n    if(book.inShelf === true && newShelf === 'none') {\r\n      book.inShelf = false;\r\n      let removeFromOldShelf = this.state['shelfBooks'].filter(b => b.id !== book.id);\r\n      this.setState({shelfBooks: removeFromOldShelf, newBooks:[...this.state.newBooks, book]});\r\n    } else if (book.inShelf === false && newShelf !== 'none') {\r\n      book.inShelf = true;\r\n      let removeFromOldShelf = this.state['newBooks'].filter(b => b.id !== book.id);\r\n      this.setState({shelfBooks: [...this.state.shelfBooks, book] , newBooks: removeFromOldShelf});\r\n    }\r\n    \r\n    this.props.changeShelf(book, newShelf);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search-page\">\r\n        <div className=\"search-bar\">\r\n          <Link className=\"close-search\" to=\"/\"></Link>\r\n          <input\r\n            value={this.state.query}\r\n            onChange={this.onQueryChange}\r\n            placeholder=\"Search by Name or Author\"\r\n          />\r\n        </div>\r\n        {(this.state.query) && (\r\n          <div className=\"results\">\r\n            <Compartment\r\n                  name={`Found ${this.state.newBooks.length} new book(s)`} \r\n                  books={this.state.newBooks}\r\n                  changeShelf={this.changeShelf}\r\n            />\r\n            <Compartment\r\n                  name={`Found ${this.state.shelfBooks.length} book(s) from shelf`} \r\n                  books={this.state.shelfBooks}\r\n                  changeShelf={this.changeShelf}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchPage;","import React, { Component } from 'react';\r\nimport BookShelf from './components/bookshelf/BookShelf';\r\nimport SearchPage from './components/searchpage/SearchPage';\r\nimport { Route } from 'react-router-dom';\r\nimport * as bookAPi from './api/BooksAPI';\r\nimport './MyReads.css';\r\n\r\nclass MyReads extends Component {\r\n\r\n  state = {\r\n    currentlyReading: [],\r\n    wantToRead: [],\r\n    read: []\r\n  }\r\n\r\n  //Valid shelfs a book can be placed under.\r\n  validShelfs = ['currentlyReading', 'wantToRead', 'read'];\r\n\r\n  componentDidMount() {\r\n    bookAPi.getAll()\r\n      .then(books => {\r\n        let shelfs = {\r\n          currentlyReading: [],\r\n          wantToRead: [],\r\n          read: []\r\n        };\r\n        //Add each book to corresponding shelf.\r\n        books.forEach(book => {\r\n          shelfs[book.shelf].push(book);\r\n        });\r\n        //Update each shelf in the component state.\r\n        for (let shelf in shelfs) {\r\n          this.setState({ [shelf]: shelfs[shelf] })\r\n        }\r\n      });\r\n  }\r\n\r\n  changeShelf = (book, shelf) => {\r\n    //If book was already in shelf, remove from old shelf.\r\n    if (book.shelf) {\r\n      let removeFromOldShelf = this.state[book.shelf].filter(b => b.id !== book.id);\r\n      this.setState({ [book.shelf]: removeFromOldShelf });\r\n    }\r\n\r\n    //If book's new shelf exists, add to new shelf.\r\n    if (shelf !== 'none') {\r\n      book.shelf = shelf;\r\n      let addToNewShelf = [...this.state[shelf], book];\r\n      this.setState({ [shelf]: addToNewShelf });\r\n    }\r\n\r\n    bookAPi.update(book, shelf);\r\n  }\r\n\r\n  //Get object containing shelf and corresponding books IDs.\r\n  getBookIDs = () => {\r\n    let bookIDs = {};\r\n    this.validShelfs.forEach(shelf => {\r\n      bookIDs[shelf] = this.state[shelf].map(book => book.id);\r\n    });\r\n    return bookIDs;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Route\r\n          exact\r\n          path='/'\r\n          render={(props) =>\r\n            <BookShelf\r\n              {...props}\r\n              currentlyReading={this.state.currentlyReading}\r\n              wantToRead={this.state.wantToRead}\r\n              read={this.state.read}\r\n              shelfs={this.validShelfs}\r\n              changeShelf={this.changeShelf}\r\n            />\r\n          }\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/search\"\r\n          render={(props) =>\r\n            <SearchPage\r\n              {...props}\r\n              changeShelf={this.changeShelf}\r\n              bookIDs={this.getBookIDs()}\r\n            />\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyReads;\r\n","import React, { Component } from 'react';\r\nimport './Aside.css';\r\nimport Icon from '@material-ui/core/Icon';\r\n\r\n\r\nclass Aside extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      showList: true,\r\n      query: ''\r\n    }\r\n  }\r\n\r\n  updateQuery = (e) => {\r\n    let query = e.target.value.trimLeft().toLowerCase();\r\n    this.setState({ query })\r\n    this.props.onFilterLibraries(query);\r\n  }\r\n\r\n  toggleShowList = () => {\r\n    this.setState((prevState) => {\r\n      return { showList: !prevState.showList }\r\n    });\r\n  }\r\n\r\n  handleItemClick = (libraries) => {\r\n    if (window.innerWidth < 600)\r\n      this.toggleShowList();\r\n    this.props.onSelectLibrary(libraries.id);\r\n  }\r\n\r\n  render() {\r\n    let asideHeight = this.state.showList ? \"full-height\" : \"min-height\";\r\n    let containerState = this.state.showList ? \"show\" : \"hide\";\r\n    return (\r\n      <aside className={asideHeight}>\r\n        <div className={containerState + \" container\"}>\r\n          <input\r\n            aria-label=\"filter libraries\"\r\n            role=\"search\"\r\n            autoFocus\r\n            placeholder=\"Filter\"\r\n            value={this.state.query}\r\n            onChange={this.updateQuery}\r\n          />\r\n          <ul role=\"listbox\" aria-label=\"libraries\" aria-activedescendant=\"0\" tabIndex=\"0\">\r\n            {\r\n              this.props.libraries.map((library, index) =>\r\n                <li key={library.id}>\r\n                  <span\r\n                    id={index}\r\n                    role='listitem'\r\n                    tabIndex=\"0\"\r\n                    className={library.id === this.props.selectedID ? \"highlight\" : \"none\"}\r\n                    onClick={() => this.handleItemClick(library)}\r\n                    onKeyPress={() => this.handleItemClick(library)}\r\n                  >\r\n                    {library.name}\r\n                  </span>\r\n                </li>\r\n              )\r\n            }\r\n          </ul>\r\n        </div>\r\n        <button className=\"toggle\" onClick={this.toggleShowList} aria-label=\"menu\">\r\n          {\r\n            this.state.showList ? <Icon className=\"icon\">arrow_drop_down</Icon>\r\n              : <Icon className=\"icon\">arrow_drop_up</Icon>\r\n          }\r\n\r\n        </button>\r\n      </aside>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Aside;","import { Component } from 'react';\r\nimport './Marker.css';\r\n\r\nclass Marker extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let { library, map, selectedID } = props;\r\n    let lat = parseFloat(library.geometry.location.lat());\r\n    let lng = parseFloat(library.geometry.location.lng());\r\n    const uluru = { lat, lng };\r\n    const marker = new window.google.maps.Marker({\r\n      position: uluru,\r\n      map: map,\r\n    });\r\n    marker.addListener(\"click\", this.displayInfo);\r\n    this.marker = marker;\r\n\r\n    if (selectedID === library.id)\r\n      this.displayInfo();\r\n  }\r\n\r\n  displayInfo = () => {\r\n    let { library } = this.props;\r\n    let info = `\r\n    <div class=\"info-window\"\r\n      <h1 id=\"name\">\r\n        <Strong>${library.name}</strong>\r\n      </h1>\r\n      ${library.photos ? `<img src=\"${library.photos[0].getUrl()}\" alt=\"restaurant ${library.name}'s image\">` : ''}\r\n      <span>\r\n        Rating: ${library.rating} / 5\r\n      </span>\r\n      <span>\r\n        Open now: <Strong>${library.opening_hours ? library.opening_hours.open_now : 'N/A'}</strong>\r\n      </span>\r\n      <span>\r\n        <small>${library.formatted_address.slice(0, 50) + '...'}</small>\r\n      </span>\r\n      <span>\r\n        <small>Google Places</small>\r\n      </span>\r\n    </div>\r\n    `;\r\n    //bounce the marker once\r\n    this.marker.setAnimation(window.google.maps.Animation.BOUNCE);\r\n    setTimeout(() => this.marker.setAnimation(null), 1000);\r\n    // call parent's function to display \r\n    this.props.onShowInfoWindow(this.marker, library, info);\r\n  }\r\n\r\n  //display infow window if this library is selected in list\r\n  shouldComponentUpdate(nextProps) {\r\n    if (nextProps.selectedID === this.props.library.id && nextProps.selectedID !== this.props.selectedID) {\r\n      this.displayInfo();\r\n    }\r\n    return false;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.marker.setMap(null);\r\n  }\r\n\r\n  render() {\r\n    return false;\r\n  }\r\n}\r\n\r\nexport default Marker;\r\n","import React, { Component } from 'react';\r\nimport Marker from '../marker/Marker';\r\nimport './Map.css';\r\nimport mapStyle from './mapStyle';\r\n\r\nclass Map extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      mapLoaded: false,\r\n      loaction: {}\r\n    }\r\n    this.map = null;\r\n    this.infoWindow = null;\r\n    this.service = null;\r\n  }\r\n\r\n  showInfoWindow = (marker, library, info) => {\r\n    this.infoWindow.setContent(info);\r\n    this.infoWindow.setAnchor(marker);\r\n    this.props.onSelectLibrary(library.id);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Once the Google Maps API has finished loading, initialize the map\r\n    this.props.onDisplayGoogleMaps().then((google) => {\r\n      let mapState = {\r\n        zoom: 12,\r\n        center: { lat: 13.1057669, lng: 77.6055739 },\r\n        styles: mapStyle\r\n      }\r\n      let mapDOM = document.getElementById('map');\r\n      this.map = new google.maps.Map(mapDOM, mapState);\r\n      this.infoWindow = new google.maps.InfoWindow({maxWidth: 200});\r\n      this.service = new google.maps.places.PlacesService(this.map);\r\n      // deselect the library when infowindow is closed \r\n      google.maps.event.addListener(this.infoWindow, 'closeclick', () => {\r\n        this.props.onSelectLibrary(null);\r\n      });\r\n      // set mapLoaded state to true\r\n      this.setState({ mapLoaded: true });\r\n      if (\"geolocation\" in navigator) {\r\n        /* geolocation is available */\r\n        navigator.geolocation.getCurrentPosition(this.setExactLocation, this.setDefaultLocation);\r\n      } else {\r\n        /* geolocation IS NOT available */\r\n        this.setDefaultLocation();\r\n      }\r\n    });\r\n  }\r\n\r\n  setExactLocation = (position) => {\r\n    let lat = position.coords.latitude;\r\n    let lng = position.coords.longitude;\r\n    let location = new window.google.maps.LatLng(lat, lng);\r\n    this.map.setCenter(location);\r\n    this.service.textSearch({ query: 'library', radius: '500', location}, (r) => this.props.onLoadLibraries(r));\r\n    this.setState({location});\r\n  }\r\n\r\n  setDefaultLocation = () => {\r\n    let lat = 13.1057669;\r\n    let lng = 77.6055739;\r\n    let location = new window.google.maps.LatLng(lat, lng);\r\n    this.service.textSearch({ query: 'library', radius: '500', location}, (r) => this.props.onLoadLibraries(r));\r\n    this.setState({location});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"map\" aria-label=\"map location\" role=\"application\">\r\n        {\r\n          this.state.mapLoaded && this.props.libraries.length ?\r\n            this.props.libraries.map((library) =>\r\n              <Marker\r\n                key={library.id}\r\n                library={library}\r\n                map={this.map}\r\n                selectedID={this.props.selectedID}\r\n                onShowInfoWindow={this.showInfoWindow}\r\n              />\r\n            )\r\n            : false\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Map;","import React from 'react';\r\nimport './Error.css';\r\n\r\nfunction Error(props) {\r\n  console.log(`Error! ${props.errorMessage}`);\r\n  return (\r\n    <div className=\"modal\" role=\"dialog\">\r\n      <h3 className=\"err-head\">Error Occoured</h3>\r\n      <h5 className=\"err-meg\">{props.errorMessage.message || props.errorMessage}</h5>\r\n      <button className=\"err-btn\" onClick={()=>window.location.reload(true)}>Reload</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Error;","import React, { Component } from 'react';\r\nimport Aside from './components/aside/Aside';\r\nimport Map from './components/map/Map';\r\nimport Error from './components/error/Error';\r\nimport './NeighbourhoodLibraries.css';\r\n\r\nclass NeighbourhoodLibraries extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      libraries: [],\r\n      filteredLibraries: [],\r\n      selectedLibraryID: null,\r\n      err: [],\r\n    }\r\n    // Start Google Maps API loading since we know we'll soon need it\r\n    this.getGoogleMaps();\r\n    //handle Google Map's API error\r\n    window.gm_authFailure = this.gm_authFailure;\r\n  }\r\n\r\n  gm_authFailure = () => {\r\n    this.setState((prevState) => {\r\n      return { err: [...prevState.err, 'Google Map Authorization Failed'] };\r\n    });\r\n  }\r\n\r\n  getGoogleMaps = () => {\r\n    // If we haven't already defined the promise, define it\r\n    if (!this.googleMapsPromise) {\r\n      this.googleMapsPromise = new Promise((resolve) => {\r\n        // Add a global handler for when the API finishes loading\r\n        window.resolveGoogleMapsPromise = () => {\r\n          // Resolve the promise\r\n          resolve(window.google);\r\n          // Tidy up\r\n          delete window.resolveGoogleMapsPromise;\r\n        };\r\n\r\n        // Load the Google Maps API\r\n        const script = document.createElement(\"script\");\r\n        const API = 'AIzaSyDA9RLo-1ZBGb-eQRBPWUpIB-Z97cuiZTM';\r\n        script.src = `https://maps.googleapis.com/maps/api/js?key=${API}&libraries=places&callback=resolveGoogleMapsPromise`;\r\n        script.async = true;\r\n        document.body.appendChild(script);\r\n      });\r\n    }\r\n    // Return a promise for the Google Maps API\r\n    return this.googleMapsPromise;\r\n  }\r\n\r\n  selectLibrary = (id) => {\r\n    if (this.state.selectedLibraryID !== id)\r\n      this.setState({ selectedLibraryID: id });\r\n  }\r\n\r\n  filterLibraries = (query) => {\r\n    this.setState((prevState) => {\r\n      let filteredLibraries = prevState.libraries.filter((library) => library.name.toLowerCase().includes(query));\r\n      return { filteredLibraries };\r\n    });\r\n  }\r\n\r\n  loadLibraries = (libraries) => {\r\n    this.setState({ libraries: libraries, filteredLibraries: libraries });\r\n    console.log(libraries);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main>\r\n        {\r\n          this.state.err.length ? <Error errorMessage={this.state.err.join(', ')} /> : false\r\n        }\r\n        <Aside\r\n          libraries={this.state.filteredLibraries}\r\n          selectedID={this.state.selectedLibraryID}\r\n          onSelectLibrary={this.selectLibrary}\r\n          onFilterLibraries={this.filterLibraries}\r\n        />\r\n        <Map\r\n          libraries={this.state.filteredLibraries}\r\n          selectedID={this.state.selectedLibraryID}\r\n          onSelectLibrary={this.selectLibrary}\r\n          onDisplayGoogleMaps={this.getGoogleMaps}\r\n          onLoadLibraries={this.loadLibraries}\r\n        />\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NeighbourhoodLibraries;\r\n","import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport MyReads from './main-components/my-reads/MyReads';\r\nimport NeighbourhoodLibraries from './main-components/neighbourhood-libraries/NeighbourhoodLibraries';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Route\r\n          path='/'\r\n          component={MyReads}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/map\"\r\n          component={NeighbourhoodLibraries}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n  </BrowserRouter>\r\n  , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}